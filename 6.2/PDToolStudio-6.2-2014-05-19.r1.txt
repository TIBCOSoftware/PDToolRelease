(c) 2014 Cisco and/or its affiliates. All rights reserved.
==================================
PDTool 6.2 Release notes:
==================================
Section 1: Minimum Recommend CIS Versions
Section 2: Release notes (newest first)
Section 3: To Upgrade an existing install

==================================
Section 1:
Minimum Recommended CIS Versions:
==================================
CIS 5.1:  Hotfix  5.1.0.04.45 or higher
CIS 5.2:  Hotfix  5.2.0.01.56 or higher
CIS 6.0:  Release 6.0.0.00.27 or higher
CIS 6.1:  Release 6.1.0.00.07 or higher
CIS 6.2:  Release 6.2.0.00.22 or higher


==================================
Section 2:
Release Notes (newest first):
==================================

======================
Release 2014-05-19:
======================
1) VCS Module (mtinius):
	a) Added the ability to set/extract variables from TFS_SERVER_URL and the VCS_Module.xml variables.
	b) Added the ability in /bin/setVars.bat to invoke a separate setMyVars.bat file in the users home directory for presonal variable settings.
	c) Added checks for substitute drive in ExecutePDTool.bat and ExecutePDToolStudio.bat.
	d) Fixed issue where /log was created instead of /logs.

======================
Release 2014-04-12:
======================
1) VCS Module (mtinius):
	a) Added the ability to initialize the VCS with the Composite repository base folders and custom CIS folders.
	   Supported in this release: Subversion, TFS, Perforce
	   Not supported in this release: CVS
	   The use cases for this feature support multi-tenant environments or CIS repository installations where there
	   are 10s of 1000s of resources and not all resources will be placed under version control.  The base-level
	   folders are mandatory when establishing the VCS repository.  Without these folders being properly checked-in, 
	   the check-out process will not work properly.  The traditional way of approaching this was to check-in root (/)
	   to insure all base-level folders were checked in.  However, the downside to this is that then entire Composite
	   repository was also checked in.  This may not be desirable if there are 10s of 1000s of resources.  The other
	   requirement is that all intermediate folders leading up to the actual tenant folder must be checked in.  The only
	   way that this could have been done in the past was to check-in starting at that folder which in turn would check in
	   all folders within that path.  If there were other tenant folders within that path, they would also be checked in.
	   
	   The following capability has been added to PDToolStudio to provide the flexibility for initializing the VCS repository
	   with base-level folders and custom CIS folders.
            ExecutePDToolStudio.bat [-nopause] -vcsinitBaseFolders [-vcsinitBaseFolders custom-CIS-path-list] [-vcsuser vcs-username] [-vcspassword vcs-password]
               arg1:: [-nopause] is an optional parameter used to execute the batch file without pausing at the end of the script.
			   arg2:: -vcsinitBaseFolders is used to initialize the vcs repository with the Composite repository base folders and custom folders.
               arg3:: [-customCisPathList custom-CIS-path-list] optional parameter.   Custom, comma separated list of CIS paths to add to the VCS repository.
               arg4:: [-vcsuser vcs-username] optional parameter
               arg5:: [-vcspassword vcs-password] optional parameter

======================
Release 2014-03-26:
======================
1) No changes for PDToolStudio.

======================
Release 2014-03-12:
======================
1) Open Source Release (mtinius)
	a) Prepared PDTool for open source.  
	b) Changed package names from com.compositesw to com.cisco.dbvu

2) VCS Module (mtinius) - Added fix for filename/path too long issue.
	a) Resolved issue when running PDTool in windows and the path names are longer than 259 characters. Resolved for subversion and TFS.  Has not been resolved for Perforce or CVS.
	b) Caveat:  Since TFS is built on windows, TFS itself contains the 259 character limitation and therefore, it will still throw errors.  This is a known problem with TFS.
	
3) VCS Module (mtinius) - Added additional command line option variables for workspace initialization, checkin and checkout
	a) Options were added to deploy.properties, studio.properties and VCSModule.xml file.
	b) PDToolModule.xsd was modified to support additional properties
	c) List of property additions include:
		# Workspace Initialization.  Create new workspace: 				VCS_WORKSPACE_INIT_NEW_OPTIONS=
		# Workspace Initialization.  Link workspace to VCS repository: 	VCS_WORKSPACE_INIT_LINK_OPTIONS=
		# Workspace Initialization.  Get resources from VCS repository: VCS_WORKSPACE_INIT_GET_OPTIONS=
		# Resource Checkin. Checkin resources to VCS: 					VCS_CHECKIN_OPTIONS=
		# Resource Checkin Required. Checkin resources to VCS: 			VCS_CHECKIN_OPTIONS_REQUIRED=
		# Resource Checkout. Checkout resources to VCS: 				VCS_CHECKOUT_OPTIONS=
		# Resource Checkout Required. Checkout resources to VCS: 		VCS_CHECKOUT_OPTIONS_REQUIRED=
		
4) DEPRECATED: The property TFS_CHECKIN_OPTIONS has been deprecated.  Use VCS_CHECKIN_OPTIONS instead.

5) Added ability to inject "checkin" command line options into the Studio Comment text using this template:
		VCS_CHECKIN_OPTIONS(<commands>) your comments go here.
		Use VCS_CHECKIN_OPTIONS_REQUIRED in studio.properties file to require that those arguments are present.
		
======================
Release 2014-02-04:
======================
1) Batch Files (mtinius) - Updated batch files to include JAVA_OPT.  Added CERT_ARG but defaulted to blank as it may not be needed for PDTool Studio.

======================
Release 2013-12-10:
======================
no changes for PDToolStudio - refer to 2013-04-18 release.

======================
Release 2013-09-09:
======================
no changes for PDToolStudio - refer to 2013-04-18 release.

======================
Release 2013-05-09:
======================
no changes for PDToolStudio - refer to 2013-04-18 release.

======================
Release 2013-04-18:
======================
Author: mtinius
1) Added the ability to generate the Composite Studio "Enable VCS" property file using ExecutePDToolStudio.bat
   This writes out a properties file to C:\Users\<user>\.compositesw\<composite_user>.<domain>.<host>.properties which contains
   the Composite Studio Enable VCS settings.

======================
Release 2013-03-01:
======================
1) no changes for PDToolStudio - refer to 2013-01-14 release.

======================
Release 2013-02-15:
======================
1) no changes for PDToolStudio - refer to 2013-01-14 release.

======================
Release 2013-01-14:
======================
Author: mtinius
1) Modified deployment configuration files to account for different CIS versions so that when testing is done
   the versions are not mixed for ArchiveModule and VCSModule.

     /resources/config/
	studio.properties
		CIS_VERSION=6_2
		VCS_REPOSITORY_URL=http:////host.composite.com/svn/sandbox/PDTOOL/$CIS_VERSION
	
======================
Release 2012-10-29:
======================
Author: mtinius
1) Updated VCS code to take into account resource type when doing a check-in.
   Coincides with (SUP-13075) VCS checkin process attempts to check in the wrong resource when multiple.
   No PDTool configuration changes are required.

======================
Release 2012-10-09:
======================
no changes for PDToolStudio - refer to 2012-08-15 release.

======================
Release 2012-09-24:
======================
no changes for PDToolStudio - refer to 2012-08-15 release.

======================
Release 2012-08-15:
======================
1) Ported PDToolStudio to 6.2.  Made changes to:
   a) /bin/ExecutePDToolStudio.bat, checkout.bat, checkin.bat, forced_checkin.bat
   b) /lib/*.jar, added /lib/endorsed

======================
Release 2012-08-10:
======================
no changes for PDToolStudio - refer to 2012-07-19 release.
1) General change to CommonUtils.extracVariables
   a) Network share paths starting with \\ are converted to / causing invalid network/share paths.
      Requires the http URL to have 4 forward slashes: VCS_REPOSITORY_URL=http:////host.composite.com/svn/sandbox

======================
Release 2012-07-24:
======================
no changes for PDToolStudio - refer to 2012-07-19 release.

======================
Release 2012-07-19:
======================
1) studio.properties
    a) Added VCS_WORKSPACE_NAME environment variable
    b) Modified VCS_WORKSPACE_DIR
    c) Modified P4CLIENT and P4_ENV
    
2) Batch Executables (/bin)    
	a) Modified "all" windows batch files to address the "file too long" problem for all VCS implementations.
	b) Use a SUBST variable v: to assist in shortening the path

======================
Release 2012-06-08:
======================
1) VCSModule:
    a) Allow no username and password to be set in the deploy.properties, VCSModule.xml or the command line.
       This allows a user to use the cached credentials in the filesystem when executing a VCS command.
       An error will still be thrown by the VCS server if the user credentials have not been established.
       A user must first establish their credential outside of PD Tool prior to executing PD Tool commands for the first time.
    b) Allow properties to contain $$ within the text which is converted to $.  
       This is useful for URLS that contain a $ in the URL like http://localhost:port/$/repo/project      

======================
Release 2012-03-09:
======================
1) Fixed VCS issue with missing jar files.  Replaced mail.jar with geronimo-javamail_1.4_mail-1.8.2.jar and added saaj-ri.jar.
   These were required by the Archive code for import/export.
2) Added JAVA_OPT with min and max memory settings to ExecutePDTool.bat, ExecutePDTool.sh, and ExecutePDToolStudio.bat

======================
Release 2012-02-22:
======================
1) Fixed issue with p4 submit.  Command set as follows: p4 submit -d "<message> .//<cis-resource-path>"
2) Enhancement: added VCS_MESSAGE_PREPEND which allows the user to prepend a static message onto the message that gets passed in.
     Added VCS_MESSAGE_PREPEND deploy.property and studio.property
     command:  p4 submit -d "<VCS_MESSAGE_PREPEND> <message> .//<cis-resource-path>"
3) Fixed issue with 01/31 build not being able to login and perform ArchiveModule import or export.

To Upgrade an existing install:
Copy the following from the new distribution to your existing PD Tool installation
1.  /dist/CisDeployTool.jar
2.  /docs/*
3.  /lib/CisDeployToolModules.jar
4. Edit studio.properties (and any other studio properties that you have) and add the following text after VCS_IGNORE_MESSAGES
#
#-------------------
# VCS_MESSAGE_PREPEND - A static message that gets prepended onto all check-in or forced check-in messages
VCS_MESSAGE_PREPEND=
#-------------------

======================
Release 2012-01-31:
======================
1) New Build for PD Tool - no changes for PD Tool Studio

======================
Release 2012-01-26:
======================
1) Fixed a Perforce issue where the user does not have permissions to delete the link to the workspace on the server.
   Removed the -f flag from the command "p4 client -f -d ${VCS_WORKSPACE_NAME}" and provided a way to pass in
   options from the deploy.properties/studio.properties using P4DEL_LINK_OPTIONS=

======================
Release 2012-01-10:
======================
GA Release

======================
Release 2011-10-27:
======================
Modified Basic Authenticator to allow for user@domain for LDAP domains
Added 3rd party license files

======================
Release 2011-09-26:
======================
Updated documentation "Composite PS Promotion and Deployment Tool Studio VCS Integration.pdf"
Added initial TFS integration.
Updated /resources/plan files to reflect TFS properties and documentation

======================
Release 2011-09-06:
======================
Fixed bugs in scripts.
Updated documentation.
Fixed distribution.
Enhanced  studio configuration properties


================================
Section 3:
To Upgrade an existing install:
================================
1. Rename the original PDToolStudio or PDToolStudio62 directory to PDTool62Studio-YYYY-MM-DD
     where YYYY-MM-DD represents the actual release of this version as found in PDToolStudio-6.2-YYYY-MM-DD.r1.txt.

2. Install the new version by unzipping the PDToolStudio zip file

Upgrade Config Files
--------------------
3. Copy PDTool62-YYYY-MM-DD/config/*.properties PDTool62/config
   a) Edit .properties files as needed or as directed by the release notes
   b) Copy any xml or log4j.properties if modified

Upgrade bin Files
--------------------
4. Copy any customized batch/shell script files from PDTool62-YYYY-MM-DD/bin to PDTool62/bin
   If there were any modifications to the ExecutePDToolStudio.bat or .sh, those would need to be 
	retro-fitted into the new ExecutePDToolStudio batch or shell script.
   In particular, copy the settings from PDTool62-YYYY-MM-DD/bin/setVars.bat or .sh to the new
	PDTool62/bin/setVars.bat
